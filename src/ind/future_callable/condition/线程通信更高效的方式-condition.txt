######################################

目录: Condition 线程通信更高效的方式

######################################
======================================
第一段: Condition是与Lock配合使用的
======================================

Condition 将 Object 监视器方法（wait、notify 和 notifyAll）分解成截然不同的对象，以便通过将这些对象与任意 Lock 实现组合使用，
为每个对象提供多个等待 set （wait-set）。
其中，Lock 替代了 synchronized 方法和语句的使用，Condition 替代了 Object 监视器方法的使用


======================================
第二段: condition和 监视器方法的异同之处
======================================

在Condition中，用await()替换wait()，用signal()替换notify()，用signalAll()替换notifyAll()，传统线程的通信方式，
Condition都可以实现，这里注意，Condition是被绑定到Lock上的，要创建一个Lock的Condition必须用newCondition()方法。
======================================
第三段: Condition的强大之处
======================================
Condition的强大之处在于它可以为多个线程间建立不同的Condition

======================================
第四段:
======================================


======================================
第五段:
======================================